; Printing text to screen
; Starting to use the Spectrum ROM routines

	DEVICE ZXSPECTRUM48

	org $8000

; Routines
CL_ALL	= $0DAF

; Character Codes
ENTER   = $0D
INK     = $10
PAPER   = $11
FLASH   = $12
BRIGHT  = $13
GFX_0   = $80
GFX_1   = GFX_0+1
GFX_2   = GFX_0+2
GFX_3   = GFX_0+3
GFX_4   = GFX_0+4
GFX_5   = GFX_0+5
GFX_6   = GFX_0+6
GFX_7   = GFX_0+7
GFX_8   = GFX_0+8
GFX_9   = GFX_0+9
GFX_A   = GFX_0+$A
GFX_B   = GFX_0+$B
GFX_C   = GFX_0+$C
GFX_D   = GFX_0+$D
GFX_E   = GFX_0+$E
GFX_F   = GFX_0+$F
ENDCHR	= $E2

; Main routine

start:
	im 1		; Use ROM interrupts
	ei		; Enable interrupts
	call CL_ALL	; Clear screen
	ld bc,SCR_CHARS	; Total screen characters
	ld hl,screen	; Start of screen
printloop:
	ld a,(hl)	; Get character
	rst $10		; Print character
	inc hl
	dec bc
	ld a,b
	or c
	jr nz,printloop	; loop for all screen characters
	ret

; Screen Data

screen:
; Area 1
	; db GFX_0,GFX_0,GFX_0,GFX_0,GFX_0,GFX_0,GFX_0,GFX_0	; Line 1
	; db GFX_0,GFX_0,GFX_0,GFX_0,GFX_0,GFX_0,GFX_0,GFX_0
	; db GFX_0,GFX_0,GFX_0,GFX_0,GFX_0,GFX_0,GFX_0,GFX_0
	; db GFX_0,GFX_0,GFX_0,GFX_0,GFX_0,GFX_0,GFX_0,GFX_0
	db GFX_0,GFX_0,GFX_C,GFX_C,GFX_C,GFX_C,GFX_0,GFX_0	; Line 2
	db GFX_0,GFX_0,GFX_C,GFX_C,GFX_C,GFX_C,GFX_0,GFX_0
	db GFX_0,GFX_0,GFX_C,GFX_C,GFX_C,GFX_C,GFX_0,GFX_0
	db GFX_0,GFX_C,GFX_C,GFX_C,GFX_C,GFX_0,GFX_0,GFX_0
	db GFX_0,GFX_0,GFX_F,GFX_3,GFX_3,GFX_3,GFX_C,GFX_0	; Line 3
	db GFX_0,GFX_C,GFX_3,GFX_3,GFX_3,GFX_3,GFX_C,GFX_0
	db GFX_0,GFX_C,GFX_3,GFX_3,GFX_3,GFX_3,GFX_C,GFX_0
	db GFX_0,GFX_F,GFX_3,GFX_3,GFX_3,GFX_C,GFX_0,GFX_0
	db GFX_0,GFX_0,GFX_F,GFX_0,GFX_0,GFX_0,GFX_F,GFX_0	; Line 4
	db GFX_0,GFX_F,GFX_0,GFX_0,GFX_0,GFX_0,GFX_F,GFX_0
	db GFX_0,GFX_F,GFX_0,GFX_0,GFX_0,GFX_0,GFX_F,GFX_0
	db GFX_0,GFX_F,GFX_0,GFX_0,GFX_0,GFX_F,GFX_0,GFX_0
	db GFX_0,GFX_0,GFX_F,GFX_C,GFX_C,GFX_C,GFX_3,GFX_0	; Line 5
	db GFX_0,GFX_F,GFX_0,GFX_0,GFX_0,GFX_0,GFX_F,GFX_0
	db GFX_0,GFX_F,GFX_0,GFX_0,GFX_0,GFX_0,GFX_F,GFX_0
	db GFX_0,GFX_F,GFX_C,GFX_C,GFX_C,GFX_3,GFX_0,GFX_0
	db GFX_0,GFX_0,GFX_F,GFX_3,GFX_3,GFX_3,GFX_0,GFX_0	; Line 6
	db GFX_0,GFX_F,GFX_0,GFX_0,GFX_0,GFX_0,GFX_F,GFX_0
	db GFX_0,GFX_F,GFX_0,GFX_0,GFX_0,GFX_0,GFX_F,GFX_0
	db GFX_0,GFX_F,GFX_3,GFX_3,GFX_3,GFX_0,GFX_0,GFX_0
	db GFX_0,GFX_0,GFX_F,GFX_0,GFX_0,GFX_0,GFX_0,GFX_0	; Line 7
	db GFX_0,GFX_3,GFX_C,GFX_C,GFX_C,GFX_C,GFX_3,GFX_0
	db GFX_0,GFX_3,GFX_C,GFX_C,GFX_C,GFX_C,GFX_3,GFX_0
	db GFX_0,GFX_F,GFX_0,GFX_0,GFX_0,GFX_0,GFX_0,GFX_0
	db GFX_0,GFX_0,GFX_3,GFX_0,GFX_0,GFX_0,GFX_0,GFX_0	; Line 8
	db GFX_0,GFX_0,GFX_3,GFX_3,GFX_3,GFX_3,GFX_0,GFX_0
	db GFX_0,GFX_0,GFX_3,GFX_3,GFX_3,GFX_3,GFX_0,GFX_0
	db GFX_0,GFX_3,GFX_0,GFX_0,GFX_0,GFX_0,GFX_0,GFX_0
; Area 2
	db GFX_0,GFX_0,GFX_4,GFX_C,GFX_8,GFX_0,GFX_0,GFX_0	; Line 9
	db GFX_0,GFX_0,GFX_0,GFX_4,GFX_0,GFX_0,GFX_0,GFX_0
	db GFX_0,GFX_0,GFX_0,GFX_0,GFX_0,GFX_0,GFX_0,GFX_0
	db GFX_0,GFX_4,GFX_0,GFX_0,GFX_0,GFX_0,GFX_0,GFX_0
	db GFX_0,GFX_0,GFX_5,GFX_C,GFX_9,GFX_0,GFX_3,GFX_6	; Line 10
	db GFX_4,GFX_3,GFX_2,GFX_5,GFX_9,GFX_0,GFX_5,GFX_4
	db GFX_5,GFX_0,GFX_3,GFX_6,GFX_4,GFX_3,GFX_2,GFX_0
	db GFX_C,GFX_D,GFX_4,GFX_3,GFX_2,GFX_0,GFX_0,GFX_0
	db GFX_0,GFX_0,GFX_5,GFX_0,GFX_5,GFX_4,GFX_3,GFX_7	; Line 11
	db GFX_5,GFX_0,GFX_0,GFX_5,GFX_6,GFX_0,GFX_5,GFX_5
	db GFX_5,GFX_4,GFX_3,GFX_7,GFX_5,GFX_0,GFX_0,GFX_5
	db GFX_0,GFX_5,GFX_0,GFX_3,GFX_6,GFX_0,GFX_0,GFX_0
	db GFX_0,GFX_0,GFX_1,GFX_3,GFX_2,GFX_0,GFX_3,GFX_3	; Line 12
	db GFX_0,GFX_3,GFX_2,GFX_1,GFX_0,GFX_2,GFX_0,GFX_2
	db GFX_2,GFX_0,GFX_3,GFX_3,GFX_1,GFX_0,GFX_0,GFX_0
	db GFX_3,GFX_3,GFX_1,GFX_3,GFX_2,GFX_0,GFX_0,GFX_0
	db GFX_0,GFX_0,GFX_0,GFX_0,GFX_0,GFX_0,GFX_0,GFX_0	; Line 13
	db GFX_0,GFX_0,GFX_0,GFX_4,GFX_C,GFX_C,GFX_0,GFX_0
	db GFX_4,GFX_C,GFX_8,GFX_0,GFX_0,GFX_0,GFX_0,GFX_0
	db GFX_0,GFX_0,GFX_0,GFX_0,GFX_0,GFX_0,GFX_0,GFX_0
	db GFX_0,GFX_0,GFX_0,GFX_0,GFX_0,GFX_0,GFX_0,GFX_0	; Line 14
	db GFX_0,GFX_0,GFX_0,GFX_0,GFX_9,GFX_0,GFX_0,GFX_0
	db GFX_E,GFX_C,GFX_0,GFX_0,GFX_0,GFX_0,GFX_0,GFX_0
	db GFX_0,GFX_0,GFX_0,GFX_0,GFX_0,GFX_0,GFX_0,GFX_0
	db GFX_0,GFX_0,GFX_0,GFX_0,GFX_0,GFX_0,GFX_0,GFX_0	; Line 15
	db GFX_0,GFX_0,GFX_0,GFX_4,GFX_2,GFX_0,GFX_0,GFX_8
	db GFX_0,GFX_4,GFX_2,GFX_0,GFX_0,GFX_0,GFX_0,GFX_0
	db GFX_0,GFX_0,GFX_0,GFX_0,GFX_0,GFX_0,GFX_0,GFX_0
	db GFX_0,GFX_0,GFX_0,GFX_0,GFX_0,GFX_0,GFX_0,GFX_0	; Line 16
	db GFX_0,GFX_0,GFX_1,GFX_3,GFX_3,GFX_0,GFX_0,GFX_3
	db GFX_3,GFX_2,GFX_0,GFX_1,GFX_1,GFX_1,GFX_0,GFX_0
	db GFX_0,GFX_0,GFX_0,GFX_0,GFX_0,GFX_0,GFX_0,GFX_0
; Area 3
	; db GFX_0,GFX_0,GFX_0,GFX_0,GFX_0,GFX_0,GFX_0,GFX_0	; Line 17
	; db GFX_0,GFX_0,GFX_0,GFX_0,GFX_0,GFX_0,GFX_0,GFX_0
	; db GFX_0,GFX_0,GFX_0,GFX_0,GFX_0,GFX_0,GFX_0,GFX_0
	; db GFX_0,GFX_0,GFX_0,GFX_0,GFX_0,GFX_0,GFX_0,GFX_0
	db GFX_0,GFX_0,GFX_C,GFX_C,GFX_C,GFX_C,GFX_0,GFX_0	; Line 18
	db GFX_0,GFX_0,GFX_C,GFX_C,GFX_C,GFX_C,GFX_0,GFX_0
	db GFX_0,GFX_0,GFX_C,GFX_C,GFX_C,GFX_C,GFX_0,GFX_0
	db GFX_0,GFX_C,GFX_C,GFX_C,GFX_C,GFX_0,GFX_0,GFX_0
	db GFX_0,GFX_0,GFX_F,GFX_3,GFX_3,GFX_3,GFX_C,GFX_0	; Line 19
	db GFX_0,GFX_C,GFX_3,GFX_3,GFX_3,GFX_3,GFX_C,GFX_0
	db GFX_0,GFX_C,GFX_3,GFX_3,GFX_3,GFX_3,GFX_C,GFX_0
	db GFX_0,GFX_F,GFX_3,GFX_3,GFX_3,GFX_C,GFX_0,GFX_0
	db GFX_0,GFX_0,GFX_F,GFX_0,GFX_0,GFX_0,GFX_F,GFX_0	; Line 20
	db GFX_0,GFX_F,GFX_0,GFX_0,GFX_0,GFX_0,GFX_F,GFX_0
	db GFX_0,GFX_F,GFX_0,GFX_0,GFX_0,GFX_0,GFX_F,GFX_0
	db GFX_0,GFX_F,GFX_0,GFX_0,GFX_0,GFX_F,GFX_0,GFX_0
	db GFX_0,GFX_0,GFX_F,GFX_C,GFX_C,GFX_C,GFX_3,GFX_0	; Line 21
	db GFX_0,GFX_F,GFX_0,GFX_0,GFX_0,GFX_0,GFX_F,GFX_0
	db GFX_0,GFX_F,GFX_0,GFX_0,GFX_0,GFX_0,GFX_F,GFX_0
	db GFX_0,GFX_F,GFX_C,GFX_C,GFX_C,GFX_3,GFX_0,GFX_0
	db GFX_0,GFX_0,GFX_F,GFX_3,GFX_3,GFX_3,GFX_0,GFX_0	; Line 22
	db GFX_0,GFX_F,GFX_0,GFX_0,GFX_0,GFX_0,GFX_F,GFX_0
	db GFX_0,GFX_F,GFX_0,GFX_0,GFX_0,GFX_0,GFX_F,GFX_0
	db GFX_0,GFX_F,GFX_3,GFX_3,GFX_3,GFX_0,GFX_0,GFX_0
	db GFX_0,GFX_0,GFX_F,GFX_0,GFX_0,GFX_0,GFX_0,GFX_0	; Line 23
	db GFX_0,GFX_3,GFX_C,GFX_C,GFX_C,GFX_C,GFX_3,GFX_0
	db GFX_0,GFX_3,GFX_C,GFX_C,GFX_C,GFX_C,GFX_3,GFX_0
	db GFX_0,GFX_F,GFX_0,GFX_0,GFX_0,GFX_0,GFX_C,GFX_0
	db GFX_0,GFX_0,GFX_3,GFX_0,GFX_0,GFX_0,GFX_0,GFX_0	; Line 24
	db GFX_0,GFX_0,GFX_3,GFX_3,GFX_3,GFX_3,GFX_0,GFX_0
	db GFX_0,GFX_0,GFX_3,GFX_3,GFX_3,GFX_3,GFX_0,GFX_0
	db GFX_0,GFX_3,GFX_0,GFX_0,GFX_0,GFX_0,GFX_3,GFX_0

SCR_CHARS = $ - screen

	SAVESNA "text.sna", start